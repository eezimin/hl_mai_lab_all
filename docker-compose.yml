version: '2.1'

services:
  mai-db-node-ex01:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: mai-db-node-ex01
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3360:3306
    healthcheck:
      test: "/usr/bin/mariadb --user=stud --password=stud --execute \"SHOW DATABASES;\""
      interval: 15s
      timeout: 1s
      retries: 5
    volumes:
      - db-node-ex01-data:/var/lib/mysql

  mai-db-node-ex02:
    build:
      context: mariadb
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3361:3306
    healthcheck:
      test: "/usr/bin/mariadb --user=stud --password=stud --execute \"SHOW DATABASES;\""
      timeout: 20s
      retries: 5
    volumes:
      - db-node-ex02-data:/var/lib/mysql

  mai-db-node-ex03:
    build:
      context: mariadb
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3362:3306
    healthcheck:
      test: "/usr/bin/mariadb --user=stud --password=stud --execute \"SHOW DATABASES;\""
      timeout: 20s
      retries: 5
    volumes:
      - db-node-ex03-data:/var/lib/mysql

  all-db:
    build:
      context: proxysql
    healthcheck:
      test: "/usr/bin/mysql -h 127.0.0.1 -P 6033 --user=stud --password=stud --execute \"SHOW DATABASES;\""
      timeout: 20s
      retries: 5
    networks:
      - arch-network
    ports:
      # Mysql Client Port
      - 6033:6033
      # Mysql Admin Port
      - 6032:6032
    depends_on:
      - mai-db-node-ex01
      - mai-db-node-ex02
      - mai-db-node-ex03
    volumes:
      - proxysql-data:/var/lib/proxysql

  proxysql:
    build:
      context: proxysql
      dockerfile: Dockerfile
    container_name: proxysql
    command: >
      --initial
    volumes:
      - proxysql-data:/var/lib/proxysql
    healthcheck:
      test: "/usr/bin/mysql --user=stud --password=stud --execute \"SHOW DATABASES;\""
      timeout: 20s
      retries: 5
    depends_on:
      - mai-db-node-ex01
      - mai-db-node-ex02
      - mai-db-node-ex03

  # cache:
  #   image: redis:6.2-alpine
  #   restart: always
  #   ports:
  #     - '6379:6379'
  #   command: redis-server --save 20 1 --loglevel warning 
  #   networks:
  #     - arch-network
  #   volumes: 
  #     - cache:/data

  kafka1:
      image: 'bitnami/kafka:latest'
      container_name: kafka1
      ports:
      #   - "2181:2181"
         - "9092:9092"
      #   - "9093:9093"
      environment:
        KAFKA_ENABLE_KRAFT: "yes"
        KAFKA_CFG_PROCESS_ROLES: "broker,controller"
        KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
        KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
        KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
        KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka1:9092"
        KAFKA_BROKER_ID: 1
        KAFKA_CFG_NODE_ID: 1
        KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093"
        ALLOW_PLAINTEXT_LISTENER: "yes"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_KRAFT_CLUSTER_ID: "dh6khitPSDGZSBOjNeTC_g"
      volumes:
        - kafka_volume1:/bitnami/kafka
      networks:
        - arch-network
    
  kafka2:
      image: 'bitnami/kafka:latest'
      container_name: kafka2
      # ports:
      #   - "2181:2181"
      #   - "9092:9092"
      #   - "9093:9093"
      environment:
        KAFKA_ENABLE_KRAFT: "yes"
        KAFKA_CFG_PROCESS_ROLES: "broker,controller"
        KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
        KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
        KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
        KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka2:9092"
        KAFKA_BROKER_ID: 2
        KAFKA_CFG_NODE_ID: 2
        KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093"
        ALLOW_PLAINTEXT_LISTENER: "yes"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_KRAFT_CLUSTER_ID: "dh6khitPSDGZSBOjNeTC_g"
      volumes:
        - kafka_volume2:/bitnami/kafka
      networks:
        - arch-network

  kafka-ui:
      image: provectuslabs/kafka-ui:v0.4.0
      ports:
        - "8888:8080"
      environment:
        KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9092"
        KAFKA_CLUSTERS_0_NAME: "kraft"
      networks:
        - arch-network

  user_service:
    build:
      context: user_service
      dockerfile: Dockerfile
    container_name: user_service
    environment:
      - DB_HOST=mai-db-node-ex01
      - DB_PORT=3306
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
      - CACHE=cache:6z379
    ports:
      - 8080:8080
    networks:
      - arch-network
    depends_on:
      - proxysql
      # - cache
      - kafka1
      - mai-db-node-ex01
      - mai-db-node-ex02
      - mai-db-node-ex03

  writer:
    build:
      context: writer
      dockerfile: Dockerfile
    container_name: writer
    environment:
      - DB_HOST=proxysql
      - DB_PORT=6033
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
      - CACHE=cache:6379
      - QUEUE_HOST=kafka1:9092
      - QUEUE_TOPIC=event_server
      - QUEUE_GROUP_ID=0
    networks:
      - arch-network
    depends_on:
      - proxysql
      # - cache
      - kafka1
      - mai-db-node-ex01
      - mai-db-node-ex02
      - mai-db-node-ex03

  item_service:
    build:
      context: item_service
      dockerfile: Dockerfile
    container_name: item_service
    environment:
      - DB_HOST=mai-db-node-ex01
      - DB_PORT=3306
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
    ports:
      - 8083:8083
    networks:
      - arch-network
    depends_on:
      mai-db-node-ex01:
        condition: service_healthy

  cart_service:
    build:
      context: cart_service
      dockerfile: Dockerfile
    container_name: cart_service
    environment:
      - DB_HOST=mai-db-node-ex01
      - DB_PORT=3306
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
    ports:
      - 8082:8082
    networks:
      - arch-network
    depends_on:
      mai-db-node-ex01:
        condition: service_healthy

volumes:
  db-node-ex01-data:
  db-node-ex02-data:
  db-node-ex03-data:
  proxysql-data:
  kafka_volume1:
  kafka_volume2:
  cache:

networks:
  arch-network:
    driver: "bridge"
    external: false